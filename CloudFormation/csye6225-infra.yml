AWSTemplateFormatVersion: "2010-09-09"
Description: CSYE 6225 Demo
Parameters:
  VpcCidrBlock:
    Description: "CIDR block for VPC"
    Type: String
    Default: "10.0.0.0/16"
  VpcSubnet1CidrBlock:
    Description: "CIDR block for VPC subnet 1"
    Type: String
    Default: "10.0.0.0/24"
  VpcSubnet1AvailabilityZone:
    Description: "Availability Zone for VPC subnet 1"
    Type: String
    Default: "us-east-1a"
  VpcSubnet2CidrBlock:
    Description: "CIDR block for VPC subnet 2"
    Type: String
    Default: "10.0.1.0/24"
  VpcSubnet2AvailabilityZone:
    Description: "Availability Zone for VPC subnet 2"
    Type: String
    Default: "us-east-1b"
  VpcSubnet3CidrBlock:
    Description: "CIDR block for VPC subnet 3"
    Type: String
    Default: "10.0.2.0/24"
  VpcSubnet3AvailabilityZone:
    Description: "Availability Zone for VPC subnet 3"
    Type: String
    Default: "us-east-1c"
  ImageId:
    Description: "Image id"
    Type: String
    Default: "ami-033b95fb8079dc481"
  KeyName:
    Description: "Key pair name for ec2"
    Type: String
    Default: "default"
Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      InstanceTenancy: "default"
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
  myFirstSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref VpcSubnet1CidrBlock
      AvailabilityZone: !Ref VpcSubnet1AvailabilityZone
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
  mySecondSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref VpcSubnet2CidrBlock
      AvailabilityZone: !Ref VpcSubnet2AvailabilityZone
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
  myThirdSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref VpcSubnet3CidrBlock
      AvailabilityZone: !Ref VpcSubnet3AvailabilityZone
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
  myGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
      - Key: Name
        Value: !Ref AWS::StackName
  myGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: 
        Ref: myGateway
      VpcId:
        Ref: myVPC
  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: !Ref AWS::StackName
      VpcId: 
        Ref: myVPC
  myRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: myGateway
      RouteTableId: 
        Ref: myRouteTable
  myFirstSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId:
        Ref: myRouteTable
      SubnetId:
        Ref: myFirstSubnet
  mySecondSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId:
        Ref: myRouteTable
      SubnetId:
        Ref: mySecondSubnet
  myThirdSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId:
        Ref: myRouteTable
      SubnetId:
        Ref: myThirdSubnet
  mySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        VpcId:
          Ref: myVPC
        SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 1024
            ToPort: 65535
            CidrIp: 0.0.0.0/0
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 8080
            ToPort: 8080
            CidrIp: 0.0.0.0/0
  myEc2Instance: 
    Type: AWS::EC2::Instance
    DependsOn: myGatewayAttachment
    Properties: 
      ImageId: !Ref ImageId
      DisableApiTermination: false
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      BlockDeviceMappings: 
        - DeviceName: "/dev/xvdh"
          Ebs: 
            VolumeType: "gp2"
            VolumeSize: "20"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: mySecurityGroup
          SubnetId: 
            Ref: myFirstSubnet

Outputs:
  VpcId:
    Description: The VPC ID
    Value: !Ref myVPC